version: '3.8'

services:
  db:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${STORAGE_DB},${FORUM_DB},${AUTH_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./postgres-data8:/var/lib/postgresql/data8
      - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    command: -p ${POSTGRES_PORT}
    networks:
      - default

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:latest
    restart: always
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis:/var/lib/redis/data
    networks:
      - default

  storage:
    image: ${STORAGE_APP_NAME}
    container_name: ${STORAGE_APP_NAME}
    build:
      context: storage
      dockerfile: ./Dockerfile
    depends_on:
      - ${POSTGRES_CONTAINER_NAME}
    ports:
      - '${STORAGE_APP_PORT}:${STORAGE_APP_PORT}'
    environment:
      - POSTGRES_HOST=${POSTGRES_CONTAINER_NAME}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${STORAGE_DB}
      - APP_PORT=${STORAGE_APP_PORT}
    networks:
      - default

  gateway:
    image: gateway
    container_name: gateway
    build:
      context: gateway
      dockerfile: ./Dockerfile
    depends_on:
      - storage
      - forum
    ports:
      - '${GATEWAY_APP_PORT}:${GATEWAY_APP_PORT}'
    environment:
      - STORAGE_URL=http://storage:${STORAGE_APP_PORT}
      - APP_PORT=${GATEWAY_APP_PORT}
      - STORAGE_APP_HOST=${STORAGE_APP_NAME}
      - FORUM_APP_PORT=${FORUM_APP_PORT}
      - FORUM_APP_HOST=${FORUM_APP_NAME}
      - AUTH_APP_HOST=${AUTH_APP_NAME}
      - AUTH_APP_PORT=${AUTH_APP_PORT}
    networks:
      - default

  forum:
    image: ${FORUM_APP_NAME}
    container_name: ${FORUM_APP_NAME}
    build:
      context: forum
      dockerfile: ./Dockerfile
    depends_on:
      - ${POSTGRES_CONTAINER_NAME}
    ports:
      - '${FORUM_APP_PORT}:${FORUM_APP_PORT}'
    environment:
      - POSTGRES_HOST=${POSTGRES_CONTAINER_NAME}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${FORUM_DB}
      - STORAGE_SERVICE_URL=${STORAGE_SERVICE_URL}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - APP_PORT=${FORUM_APP_PORT}
    networks:
      - default

  auth:
    image: ${AUTH_APP_NAME}
    container_name: ${AUTH_APP_NAME}
    build:
      context: auth
      dockerfile: ./Dockerfile
    depends_on:
      - ${POSTGRES_CONTAINER_NAME}
    ports:
      - '${AUTH_APP_PORT}:${AUTH_APP_PORT}'
    environment:
      - POSTGRES_HOST=${POSTGRES_CONTAINER_NAME}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${AUTH_DB}
      - REDIS_HOST=${REDIS_CONTAINER_NAME}
      - REDIS_PORT=${REDIS_PORT}
      - APP_PORT=${AUTH_APP_PORT}

networks:
  default:
    name: ${NETWORK_NAME}
    driver: bridge

volumes:
  db:
    driver: local
  redis:
    driver: local
